{"version":3,"sources":["video-sync.js","src/dom-utils.ts","src/reveal-utils.ts","src/synchronizer.ts","src/video-html5.ts","src/video-sync.ts","src/video-videojs.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","RevealVideoSync","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"isAttached","node","document","parentNode","hasClass","element","className","trim","indexOf","addClass","classes","removeClass","replace",2,"normalizeSlide","indices","h","v","isNaN","slidesEqual","left","right","parseSlide","hash","bits","split","parseInt","name","test","getElementById","Reveal","getIndices","jumpToSlide","slide",3,"RevealUtils","Synchronizer","video","track","_this","cueChangeListener","onCueChange","slideChangeListener","onSlideChange","initialize","prototype","activeSlide","activeCue","loadSlideMap","addEventListener","dispose","slideMap","removeEventListener","newActiveCue","activeCues","newActiveSlide","getCueSlide","cue","findClosestSlideCue","getCurrentTime","setCurrentTime","startTime","cues","push","time","closestCue","closestDistance","Infinity","distance","Math","min","abs","endTime","text","./reveal-utils",4,"HTML5Video","currentTime","type","handler","onReady","setTimeout","loadSlides","slidesUrl","callback","unloadSlides","createSlidesTrack","error","trackElement","waitForTrackLoad","mode","waitForMetadata","readyState","HTMLMediaElement","HAVE_METADATA","listener","videoMetadataListener","HTMLTrackElement","LOADED","trackLoadListener","createElement","kind","src","appendChild","removeChild",5,"createContainer","reveal","container","getElementsByClassName","containerClass","querySelector","nextSibling","insertBefore","createVideoElement","videoElement","getElementsByTagName","controls","slidesVttUrl","synchronizer","synchronizer_1","html5","DOMUtils","videoClass","video_html5_1","videojs","player","video_videojs_1","VideoJSVideo","./dom-utils","./synchronizer","./video-html5","./video-videojs",6,"getSource","currentSrc","setSource","source","on","off","ready","lastCueLength","checkCueLoad","clearTimeout","cueLoadTimer","newCueLength","slidesTrack","cueLoadTimeout","addRemoteTextTrack","default","removeRemoteTextTrack"],"mappings":"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","file":"video-sync.min.js","sourcesContent":[null,"export function isAttached(node:Node) {\r\n    while (node && node !== document) {\r\n        node = node.parentNode;\r\n    }\r\n    return (node === document);\r\n}\r\n\r\nexport function hasClass(element:HTMLElement, className:string) {\r\n    return (' ' + element.className.trim() + ' ').indexOf(' ' + className + ' ') !== -1;\r\n}\r\n\r\nexport function addClass(element:HTMLElement, className:string) {\r\n    var classes = ' ' + element.className.trim() + ' ';\r\n    if (classes.indexOf(' ' + className + ' ') === -1) {\r\n        classes += ' ' + className;\r\n    }\r\n    element.className = classes.trim();\r\n}\r\n\r\nexport function removeClass(element:HTMLElement, className:string) {\r\n    var classes = ' ' + element.className.trim() + ' ';\r\n    while (classes.indexOf(' ' + className + ' ') !== -1) {\r\n        classes = classes.replace(' ' + className + ' ', ' ');\r\n    }\r\n    element.className = classes.trim();\r\n}\r\n","/* globals Reveal */\r\n\r\n/// <reference path=\"../typings/reveal/reveal.d.ts\" />\r\n\r\nexport interface Indices {\r\n    h: number,\r\n    v: number,\r\n    f?: number\r\n}\r\n\r\nexport function normalizeSlide(indices:Indices):Indices {\r\n    indices.h = indices.h || 0;\r\n    indices.v = indices.v || 0;\r\n    indices.f = (typeof indices.f === 'number' && !isNaN(indices.f)) ? indices.f : -1;\r\n    return indices;\r\n}\r\n\r\nexport function slidesEqual(left:Indices, right:Indices):boolean {\r\n    if (!left || !right) {\r\n        return !left && !right;\r\n    }\r\n    return left.h === right.h && left.v === right.v && left.f === right.f;\r\n}\r\n\r\nexport function parseSlide(hash:string):Indices {\r\n    // Attempt to parse the hash as either an index or name\r\n    var bits = hash.split('/'),\r\n        h:number, v:number, f:number;\r\n    if (isNaN(parseInt(bits[0], 10))) {\r\n        // Named slide\r\n        var name = bits[0],\r\n            element:HTMLElement;\r\n        // Ensure the named link is a valid HTML ID attribute\r\n        if (/^[a-zA-Z][\\w:.-]*$/.test(name)) {\r\n            // Find the slide with the specified ID\r\n            element = document.getElementById(name);\r\n        }\r\n        if (!element) {\r\n            // Unknown slide\r\n            return null;\r\n        }\r\n        // Find the position of the named slide\r\n        var indices = Reveal.getIndices(element);\r\n        h = indices.h;\r\n        v = indices.v;\r\n        f = parseInt(bits[1], 10);\r\n    }\r\n    else {\r\n        // Index components\r\n        h = parseInt(bits[0], 10);\r\n        v = parseInt(bits[1], 10);\r\n        f = parseInt(bits[2], 10);\r\n    }\r\n\r\n    return normalizeSlide({h: h, v: v, f: f});\r\n}\r\n\r\nexport function jumpToSlide(slide:Indices) {\r\n    Reveal.slide(slide.h, slide.v, slide.f);\r\n}\r\n","import { Disposable } from './common';\r\nimport { Video } from './video';\r\nimport * as RevealUtils from './reveal-utils';\r\n\r\ntype RevealIndices = RevealUtils.Indices;\r\ntype SlideMap = { [h: number] : { [v: number] : { [f: number] : TextTrackCue[] } } };\r\n\r\nexport class Synchronizer implements Disposable {\r\n\r\n    private video:Video;\r\n    private track:TextTrack;\r\n\r\n    private activeCue:TextTrackCue;\r\n    private activeSlide:RevealIndices;\r\n\r\n    private slideMap:SlideMap;\r\n\r\n    private cueChangeListener = () => {\r\n        this.onCueChange();\r\n    };\r\n\r\n    private slideChangeListener = () => {\r\n        this.onSlideChange();\r\n    };\r\n\r\n    constructor(video:Video, track:TextTrack) {\r\n        this.video = video;\r\n        this.track = track;\r\n        this.initialize();\r\n    }\r\n\r\n    private initialize() {\r\n        this.activeSlide = null;\r\n        this.activeCue = null;\r\n        this.loadSlideMap();\r\n\r\n        // Seek to initial slide\r\n        this.onSlideChange();\r\n\r\n        // Bind listeners\r\n        if ('oncuechange' in this.track) {\r\n            this.track.addEventListener('cuechange', this.cueChangeListener);\r\n        } else {\r\n            // Polyfill missing support for cuechange event with timeupdate\r\n            this.video.addEventListener('timeupdate', this.cueChangeListener);\r\n        }\r\n        Reveal.addEventListener('slidechanged', this.slideChangeListener);\r\n        Reveal.addEventListener('fragmentshown', this.slideChangeListener);\r\n        Reveal.addEventListener('fragmenthidden', this.slideChangeListener);\r\n    }\r\n\r\n    dispose() {\r\n        this.activeSlide = null;\r\n        this.activeCue = null;\r\n        this.slideMap = null;\r\n\r\n        // Unbind listeners\r\n        this.track.removeEventListener('cuechange', this.cueChangeListener);\r\n        this.video.removeEventListener('timeupdate', this.cueChangeListener);\r\n        Reveal.removeEventListener('slidechanged', this.slideChangeListener);\r\n        Reveal.removeEventListener('fragmentshown', this.slideChangeListener);\r\n        Reveal.removeEventListener('fragmenthidden', this.slideChangeListener);\r\n\r\n        this.video.dispose();\r\n        this.video = null;\r\n    }\r\n\r\n    private onCueChange() {\r\n        // Update active cue\r\n        var newActiveCue = this.track.activeCues.length ? this.track.activeCues[0] : null;\r\n        if (newActiveCue === this.activeCue) {\r\n            return;\r\n        }\r\n        this.activeCue = newActiveCue;\r\n        // Update active slide\r\n        var newActiveSlide = Synchronizer.getCueSlide(this.activeCue);\r\n        if (!newActiveSlide || RevealUtils.slidesEqual(newActiveSlide, this.activeSlide)) {\r\n            return;\r\n        }\r\n        this.activeSlide = newActiveSlide;\r\n        // Jump to slide\r\n        RevealUtils.jumpToSlide(this.activeSlide);\r\n    }\r\n\r\n    private onSlideChange() {\r\n        var slide = RevealUtils.normalizeSlide(Reveal.getIndices());\r\n        if (RevealUtils.slidesEqual(slide, this.activeSlide)) {\r\n            // Already active slide\r\n            return;\r\n        }\r\n        // Find cue closest in time with this slide\r\n        var cue = this.findClosestSlideCue(slide, this.video.getCurrentTime());\r\n        if (!cue) {\r\n            return;\r\n        }\r\n        // Seek to start of closest cue\r\n        this.video.setCurrentTime(cue.startTime + 0.001); // avoid overlap with previous\r\n    }\r\n\r\n    private loadSlideMap() {\r\n        var slideMap:SlideMap = this.slideMap = {};\r\n        for (var i = 0; i < this.track.cues.length; i++) {\r\n            var cue = this.track.cues[i],\r\n                slide = Synchronizer.getCueSlide(cue);\r\n            if (slide) {\r\n                var h = slideMap[slide.h] || (slideMap[slide.h] = {}),\r\n                    v = h[slide.v] || (h[slide.v] = {}),\r\n                    f = v[slide.f] || (v[slide.f] = []);\r\n                f.push(cue);\r\n            }\r\n        }\r\n    }\r\n\r\n    private findClosestSlideCue(slide:RevealIndices, time:number):TextTrackCue {\r\n        var slideMap:SlideMap = this.slideMap;\r\n        if (!slideMap) {\r\n            // Not loaded\r\n            return null;\r\n        }\r\n        var h = slideMap[slide.h],\r\n            v = h && h[slide.v],\r\n            f = v && v[slide.f];\r\n        if (!f) {\r\n            // Not found\r\n            return null;\r\n        }\r\n        var closestCue:TextTrackCue,\r\n            closestDistance = Infinity;\r\n        for (var i = 0; i < f.length; i++) {\r\n            var cue = f[i],\r\n                distance = Math.min(Math.abs(cue.startTime - time), Math.abs(cue.endTime - time));\r\n            if (cue.startTime <= time && time < cue.endTime) {\r\n                // Time inside cue interval\r\n                return cue;\r\n            } else if (distance < closestDistance) {\r\n                closestCue = cue;\r\n                closestDistance = distance;\r\n            }\r\n        }\r\n        return closestCue;\r\n    }\r\n\r\n    private static getCueSlide(cue:TextTrackCue):RevealIndices {\r\n        return cue && RevealUtils.parseSlide(cue.text);\r\n    }\r\n\r\n}\r\n","import { Video } from './video';\r\n\r\nexport class HTML5Video implements Video {\r\n    private video:HTMLVideoElement;\r\n\r\n    private videoMetadataListener:EventListener;\r\n    private trackLoadListener:EventListener;\r\n    private trackElement:HTMLTrackElement;\r\n\r\n    constructor(video:HTMLVideoElement) {\r\n        this.video = video;\r\n    }\r\n\r\n    getCurrentTime() {\r\n        return this.video.currentTime;\r\n    }\r\n\r\n    setCurrentTime(time:number) {\r\n        this.video.currentTime = time;\r\n    }\r\n\r\n    addEventListener(type:string, handler:() => void) {\r\n        this.video.addEventListener(type, handler, false);\r\n    }\r\n\r\n    removeEventListener(type:string, handler:() => void) {\r\n        this.video.removeEventListener(type, handler, false);\r\n    }\r\n\r\n    onReady(handler:() => void) {\r\n        setTimeout(handler, 0);\r\n    }\r\n\r\n    loadSlides(slidesUrl:string, callback:(error:Error, track?:TextTrack) => void) {\r\n        this.unloadSlides();\r\n\r\n        if (!slidesUrl) {\r\n            callback(new Error('missing slides URL'));\r\n            return;\r\n        }\r\n\r\n        this.createSlidesTrack(slidesUrl, (error, trackElement) => {\r\n            if (error) {\r\n                callback(error);\r\n                return;\r\n            }\r\n            this.waitForTrackLoad((error) => {\r\n                if (error) {\r\n                    callback(error);\r\n                    return;\r\n                }\r\n                var track = trackElement.track;\r\n                track.mode = 'hidden';\r\n                callback(null, track);\r\n            });\r\n        });\r\n    }\r\n\r\n    dispose() {\r\n        this.unloadSlides();\r\n        this.video = null;\r\n    }\r\n\r\n    private waitForMetadata(callback:(error:Error) => void) {\r\n        if (this.video.readyState >= HTMLMediaElement.HAVE_METADATA) {\r\n            return callback(null);\r\n        } else {\r\n            var listener = () => {\r\n                this.video.removeEventListener('loadedmetadata', listener);\r\n                if (this.videoMetadataListener === listener) {\r\n                    this.videoMetadataListener = null;\r\n                    callback(null);\r\n                }\r\n            };\r\n            this.video.addEventListener('loadedmetadata', listener);\r\n            this.videoMetadataListener = listener;\r\n        }\r\n    }\r\n\r\n    private waitForTrackLoad(callback:(error:Error) => void) {\r\n        if (!this.trackElement) {\r\n            return callback(new Error('missing track element'));\r\n        }\r\n        if (this.trackElement.readyState === HTMLTrackElement.LOADED) {\r\n            return callback(null);\r\n        } else {\r\n            var listener = () => {\r\n                this.trackElement.removeEventListener('load', listener);\r\n                if (this.trackLoadListener === listener) {\r\n                    this.trackLoadListener = null;\r\n                    callback(null);\r\n                }\r\n            };\r\n            this.trackElement.addEventListener('load', listener);\r\n            this.trackLoadListener = listener;\r\n        }\r\n    }\r\n\r\n    private createSlidesTrack(slidesUrl:string, callback:(error:Error, trackElement?:HTMLTrackElement) => void) {\r\n        this.waitForMetadata((error) => {\r\n            if (error) {\r\n                callback(error);\r\n                return;\r\n            }\r\n            var trackElement = document.createElement('track');\r\n            trackElement.kind = 'metadata';\r\n            trackElement.src = slidesUrl;\r\n            trackElement['default'] = true;\r\n            this.video.appendChild(trackElement);\r\n            this.trackElement = trackElement;\r\n            callback(null, trackElement);\r\n        });\r\n    }\r\n\r\n    private unloadSlides() {\r\n        if (this.videoMetadataListener) {\r\n            this.video.removeEventListener('loadedmetadata', this.videoMetadataListener);\r\n        }\r\n        if (this.trackElement) {\r\n            if (this.trackLoadListener) {\r\n                this.trackElement.removeEventListener('load', this.trackLoadListener);\r\n            }\r\n            this.video.removeChild(this.trackElement);\r\n        }\r\n        this.videoMetadataListener = null;\r\n        this.trackLoadListener = null;\r\n        this.trackElement = null;\r\n    }\r\n\r\n}\r\n","import { Video } from './video';\r\nimport { HTML5Video } from './video-html5';\r\nimport { VideoJSVideo } from './video-videojs';\r\nimport { Synchronizer } from './synchronizer';\r\nimport * as DOMUtils from './dom-utils';\r\n\r\nvar containerClass:string = 'reveal-video-sync',\r\n    container:HTMLElement,\r\n    videoElement:HTMLVideoElement,\r\n    videoClass:string = 'reveal-video-sync-player';\r\n\r\nfunction createContainer() {\r\n    var reveal:Node;\r\n    if (!container) {\r\n        container = <HTMLElement> document.getElementsByClassName(containerClass)[0];\r\n        if (!container) {\r\n            container = document.createElement('aside');\r\n            container.className = containerClass;\r\n            reveal = document.querySelector('.reveal');\r\n            if (reveal.nextSibling) {\r\n                reveal.parentNode.insertBefore(container, reveal.nextSibling)\r\n            } else {\r\n                reveal.parentNode.appendChild(container);\r\n            }\r\n        }\r\n    }\r\n    return container;\r\n}\r\n\r\nfunction createVideoElement() {\r\n    var container = createContainer();\r\n    if (!videoElement) {\r\n        videoElement = container.getElementsByTagName('video')[0];\r\n        if (!videoElement) {\r\n            videoElement = document.createElement('video');\r\n            videoElement.controls = true;\r\n            container.appendChild(videoElement);\r\n        }\r\n    }\r\n    return videoElement;\r\n}\r\n\r\ntype Callback = (error:Error, synchronizer?:Synchronizer) => void;\r\n\r\nfunction loadSlides(video:Video, slidesVttUrl:string, callback?:Callback) {\r\n    return video.loadSlides(slidesVttUrl, (error, track) => {\r\n        if (error) {\r\n            if (callback) callback(error);\r\n            return;\r\n        }\r\n        var synchronizer = new Synchronizer(video, track);\r\n        if (callback) callback(null, synchronizer);\r\n    });\r\n}\r\n\r\nexport function element():HTMLVideoElement {\r\n    return createVideoElement();\r\n}\r\n\r\nexport function html5(videoElement:HTMLVideoElement, slidesVttUrl:string, callback?:Callback):void {\r\n    var container = createContainer(),\r\n        video:Video;\r\n    if (!DOMUtils.isAttached(videoElement)) {\r\n        container.appendChild(videoElement);\r\n    }\r\n    DOMUtils.addClass(videoElement, videoClass);\r\n    video = new HTML5Video(videoElement);\r\n    video.onReady(() => {\r\n        loadSlides(video, slidesVttUrl, callback);\r\n    });\r\n}\r\n\r\nexport function videojs(player:VideoJSPlayer, slidesVttUrl:string, callback?:Callback):void {\r\n    var video:Video;\r\n    if (!videojs) {\r\n        if (callback) callback(new Error('video.js not loaded'));\r\n        return;\r\n    }\r\n    player.addClass(videoClass);\r\n    player.addClass('video-js');\r\n    video = new VideoJSVideo(player);\r\n    video.onReady(() => {\r\n        loadSlides(video, slidesVttUrl, callback);\r\n    });\r\n}\r\n","/* globals videojs */\r\n\r\n/// <reference path=\"./videojs.d.ts\" />\r\n\r\nimport { Video } from './video';\r\n\r\nexport class VideoJSVideo implements Video {\r\n    private player:VideoJSPlayer;\r\n\r\n    private slidesTrack:TextTrack;\r\n    private cueLoadTimer:number;\r\n    private static cueLoadTimeout = 100;\r\n\r\n    constructor(player:VideoJSPlayer) {\r\n        this.player = player;\r\n    }\r\n\r\n    getCurrentTime() {\r\n        return this.player.currentTime();\r\n    }\r\n\r\n    setCurrentTime(time:number) {\r\n        this.player.currentTime(time);\r\n    }\r\n\r\n    getSource() {\r\n        return this.player.currentSrc();\r\n    }\r\n\r\n    setSource(source:string) {\r\n        this.player.src(source);\r\n    }\r\n\r\n    addEventListener(type:string, handler:() => void) {\r\n        this.player.on(type, handler);\r\n    }\r\n\r\n    removeEventListener(type:string, handler:() => void) {\r\n        this.player.off(type, handler);\r\n    }\r\n\r\n    onReady(handler:() => void) {\r\n        this.player.ready(handler);\r\n    }\r\n\r\n    waitForTrackLoad(callback:() => void) {\r\n        // VideoJS does not provide a 'load' event for text tracks\r\n        // so just poll the cues list until it has a stable number of cues\r\n        var self = this,\r\n            lastCueLength = 0,\r\n            checkCueLoad = () => {\r\n                clearTimeout(self.cueLoadTimer);\r\n                var newCueLength = self.slidesTrack.cues && self.slidesTrack.cues.length;\r\n                if (newCueLength > 0 && lastCueLength === newCueLength) {\r\n                    callback();\r\n                } else {\r\n                    lastCueLength = newCueLength;\r\n                    this.cueLoadTimer = setTimeout(checkCueLoad, VideoJSVideo.cueLoadTimeout);\r\n                }\r\n            };\r\n        checkCueLoad();\r\n    }\r\n\r\n    loadSlides(slidesUrl:string, callback:(error:Error, track?:TextTrack) => void) {\r\n        this.unloadSlides();\r\n\r\n        if (!slidesUrl) {\r\n            callback(new Error('missing slides URL'));\r\n            return;\r\n        }\r\n\r\n        this.slidesTrack = this.player.addRemoteTextTrack({\r\n            kind: 'metadata',\r\n            mode: 'showing',\r\n            'default': true,\r\n            src: slidesUrl\r\n        }).track;\r\n\r\n        this.waitForTrackLoad(() => {\r\n            callback(null, this.slidesTrack);\r\n        });\r\n    }\r\n\r\n    dispose() {\r\n        this.unloadSlides();\r\n        this.player = null;\r\n    }\r\n\r\n    private unloadSlides() {\r\n        clearTimeout(this.cueLoadTimer);\r\n        if (this.slidesTrack) {\r\n            this.player.removeRemoteTextTrack(this.slidesTrack);\r\n            this.slidesTrack = null;\r\n        }\r\n    }\r\n\r\n}\r\n"],"sourceRoot":".."}